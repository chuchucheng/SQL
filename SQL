SELECT DISTINCT country FROM films;

SELECT COUNT(*)

SELECT title, release_year
FROM films
WHERE release_year BETWEEN 1990 AND 2000
AND budget > 100000000
AND (language = 'Spanish' OR language = 'French');

WHERE release_year IN (1990, 2000)

SELECT name
FROM people
WHERE deathdate IS NULL
AND name IS NOT NULL;

WHERE name LIKE '_r%';

WHERE name NOT LIKE 'A%';

SELECT SUM(duration)       AVG,MIN,MAX
FROM films

SELECT title,
       (gross - budget) AS net_profit
       (duration/60.0) AS duration_hours
       AVG(duration)/60.0 AS avg_duration_hours
FROM films;

SELECT COUNT(deathdate)*100.0/COUNT(*) AS percentage_dead
FROM people;

SELECT MAX(release_year)-MIN(release_year) AS difference
FROM films;

SELECT (MAX(release_year)-MIN(release_year))/10 AS number_of_decades
FROM films;

SELECT *
FROM films
WHERE release_year <> 2015
ORDER BY duration;

WHERE title like 'M%'
ORDER BY title DESC, duration;

SELECT country, release_year, COUNT(*)
FROM films
GROUP BY release_year, country
ORDER BY country, release_year;



SELECT country,
    AVG(budget) AS avg_budget,
    AVG(gross) AS avg_gross
FROM films
WHERE release_year > 1990
GROUP BY country
HAVING COUNT(title) > 10
ORDER BY country DESC
LIMIT 5

-- JOIN
SELECT cities.name AS city,
       countries.name AS country, region
FROM cities
INNER JOIN countries
ON cities.country_code = countries.code;

SELECT c.code, name, region, e.year, fertility_rate, unemployment_rate
FROM countries AS c
INNER JOIN populations AS p
ON c.code = p.country_code
INNER JOIN economies AS e
ON c.code = e.code AND p.year = e.year;

USING(code);


####self join
SELECT p1.country_code,
       p1.size AS size2010,
       p2.size AS size2015,
       ((p2.size - p1.size)/p1.size * 100.0) AS growth_perc
FROM populations AS p1
INNER JOIN populations AS p2
ON  p1.country_code = p2.country_code
    AND p1.year=p2.year-5;


SELECT country_code, size,
    CASE WHEN size > 50000000 THEN 'large'
        WHEN size > 1000000 THEN 'medium'
        ELSE 'small' END
        AS popsize_group
INTO pop_plus
FROM populations
WHERE year = 2015;

SELECT name, continent, geosize_group, popsize_group
FROM countries_plus AS c
INNER JOIN pop_plus as p
ON c.code = p.country_code
ORDER BY geosize_group DESC;

SELECT region, AVG(gdp_percapita) AS avg_gdp
FROM countries AS c
LEFT JOIN economies AS e
USING (code)
WHERE year = 2010
GROUP BY region
ORDER BY avg_gdp DESC;

SELECT countries.name, code, languages.name AS language
FROM languages
LEFT JOIN countries
USING (code)
WHERE countries.name LIKE 'V%' OR countries.name IS NULL
ORDER BY countries.name;

SELECT c.name AS country, region, l.name AS language,
       basic_unit, frac_unit
FROM countries AS c
FULL JOIN languages AS l
USING (code)
FULL JOIN currencies AS c1
USING (code)
WHERE region LIKE 'M%esia';


SELECT c.name AS city, l.name AS language
FROM cities AS c
CROSS JOIN languages AS l
WHERE c.name LIKE 'Hyder%';

SELECT c.name AS country, region, life_expectancy AS life_exp
FROM countries AS c
LEFT JOIN populations AS p
ON c.code = p.country_code
WHERE year = 2010
ORDER BY life_exp
LIMIT 5;


-- Set theory clause,  UNION
-- Select fields from 2010 table
SELECT *
  -- From 2010 table
  FROM economies2010
	-- Set theory clause
UNION
-- Select fields from 2015 table
SELECT *
  -- From 2015 table
  FROM economies2015
-- Order by code and year
ORDER BY code, year;
